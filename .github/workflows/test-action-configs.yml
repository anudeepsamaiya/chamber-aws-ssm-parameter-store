name: Test Action Configurations

on:
  workflow_call:

jobs:
  test-action-configs:
    name: Test Action With Different Configurations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup LocalStack
        run: |
          make docker-dev-env
          echo "Waiting for LocalStack to be ready..."
          sleep 10
          
          # Configure AWS CLI
          aws configure set aws_access_key_id test
          aws configure set aws_secret_access_key test
          aws configure set region us-east-1
          aws configure set output json
          
          # Set environment variables
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "CHAMBER_AWS_SSM_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV

      - name: Create test parameters
        run: |
          export TEST_PARAM_1="/test-action/param1"
          export TEST_PARAM_2="/test-action/param2"
          export TEST_VALUE_1="value1"
          export TEST_VALUE_2="value2"

          # Set parameters in LocalStack
          aws --endpoint-url=http://localhost:4566 --region us-east-1 ssm put-parameter \
            --name "$TEST_PARAM_1" --value "$TEST_VALUE_1" --type String --overwrite
          aws --endpoint-url=http://localhost:4566 --region us-east-1 ssm put-parameter \
            --name "$TEST_PARAM_2" --value "$TEST_VALUE_2" --type String --overwrite

      # Test 1: Namespaced parameters
      - name: Test action with namespaced parameters
        uses: ./
        with:
          parameters: |
            /test-action/param1
            /test-action/param2
          namespaced: 'true'
          aws-region: 'us-east-1'
          aws-access-key-id: 'test'
          aws-secret-access-key: 'test'

      - name: Verify namespaced environment variables
        run: |
          if [ "$TEST_ACTION_PARAM1" != "value1" ]; then
            echo "Namespaced test failed: TEST_ACTION_PARAM1 = $TEST_ACTION_PARAM1, expected value1"
            exit 1
          fi
          if [ "$TEST_ACTION_PARAM2" != "value2" ]; then
            echo "Namespaced test failed: TEST_ACTION_PARAM2 = $TEST_ACTION_PARAM2, expected value2"
            exit 1
          fi
          echo "Namespaced test passed!"

      # Test 2: Non-namespaced parameters
      - name: Test action with non-namespaced parameters
        uses: ./
        with:
          parameters: |
            /test-action/param1
            /test-action/param2
          namespaced: 'false'
          aws-region: 'us-east-1'
          aws-access-key-id: 'test'
          aws-secret-access-key: 'test'

      - name: Verify non-namespaced environment variables
        run: |
          if [ "$PARAM1" != "value1" ]; then
            echo "Non-namespaced test failed: PARAM1 = $PARAM1, expected value1"
            exit 1
          fi
          if [ "$PARAM2" != "value2" ]; then
            echo "Non-namespaced test failed: PARAM2 = $PARAM2, expected value2"
            exit 1
          fi
          echo "Non-namespaced test passed!"

      # Test 3: Custom parameter mappings
      - name: Test action with custom parameter mappings
        uses: ./
        with:
          parameters: |
            /test-action/param1:CUSTOM_PARAM_1
            /test-action/param2:CUSTOM_PARAM_2
          namespaced: 'true'
          aws-region: 'us-east-1'
          aws-access-key-id: 'test'
          aws-secret-access-key: 'test'

      - name: Verify custom parameter mappings
        run: |
          if [ "$CUSTOM_PARAM_1" != "value1" ]; then
            echo "Custom mapping test failed: CUSTOM_PARAM_1 = $CUSTOM_PARAM_1, expected value1"
            exit 1
          fi
          if [ "$CUSTOM_PARAM_2" != "value2" ]; then
            echo "Custom mapping test failed: CUSTOM_PARAM_2 = $CUSTOM_PARAM_2, expected value2"
            exit 1
          fi
          echo "Custom mapping test passed!"

      - name: Clean up
        if: always()
        run: docker compose down