name: Example - Fetch SSM Parameters

# This workflow is provided as an example for users of this action
# You can use this as a template for integrating the GitHub Action in your workflows

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      aws_region:
        description: 'AWS Region for SSM parameters'
        required: false
        default: 'us-east-1'
        type: string
      namespaced:
        description: 'Use namespaced environment variables (true/false)'
        required: false
        default: 'true'
        type: string
      chamber_version:
        description: 'Chamber version to use (e.g. 2.10.12 or latest)'
        required: false
        default: '2.10.12'
        type: string

jobs:
  deploy-with-ssm-params:
    name: Deploy with SSM Parameters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials using aws-actions
      - name: Configure AWS credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws_region || 'us-east-1' }}

      # Use the chamber-aws-ssm-parameter-store action to fetch parameters
      - name: Fetch SSM Parameters
        id: fetch_params
        uses: anudeepsamaiya/chamber-aws-ssm-parameter-store@main
        with:
          parameters: |
            /my-app/api/database-url
            /my-app/api/api-key
            /my-app/api/client-secret:CLIENT_SECRET
          namespaced: ${{ github.event.inputs.namespaced || 'true' }}  # Will create MY_APP_DATABASE_URL, MY_APP_API_KEY, CLIENT_SECRET
          chamber_version: ${{ github.event.inputs.chamber_version || '2.10.12' }}
          # aws-region is inherited from aws-actions/configure-aws-credentials

      # Example of using the imported parameters in a subsequent step
      - name: Deploy application
        run: |
          echo "Deploying application with the following parameters:"

          # Check if we're using namespaced parameters to display the right variables
          if [ "${{ github.event.inputs.namespaced || 'true' }}" = "true" ]; then
            echo "Database URL: $MY_APP_DATABASE_URL"
            echo "API Key: $MY_APP_API_KEY"
          else
            echo "Database URL: $DATABASE_URL"
            echo "API Key: $API_KEY"
          fi

          # Custom-named parameters work regardless of namespacing
          echo "Client Secret: $CLIENT_SECRET"

          # Example deployment commands using the params
          # npm run deploy -- --db-url=$MY_APP_DATABASE_URL --api-key=$MY_APP_API_KEY

          # Example Docker Compose commands
          # cat > docker-compose.override.yml << EOF
          # version: '3'
          # services:
          #   app:
          #     environment:
          #       - DB_URL=$MY_APP_DATABASE_URL
          #       - API_KEY=$MY_APP_API_KEY
          #       - CLIENT_SECRET=$CLIENT_SECRET
          # EOF
          # docker compose up -d

  # Example of different parameter configurations
  non-namespaced-example:
    name: Example with Non-Namespaced Parameters
    runs-on: ubuntu-latest
    needs: deploy-with-ssm-params
    if: github.event.inputs.namespaced != 'false'  # Skip if already showing non-namespaced example
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.aws_region || 'us-east-1' }}

      - name: Fetch SSM Parameters (Non-Namespaced)
        uses: anudeepsamaiya/chamber-aws-ssm-parameter-store@main
        with:
          parameters: |
            /my-app/api/database-url
            /my-app/api/api-key
          namespaced: 'false'  # Will create DATABASE_URL, API_KEY
          chamber_version: ${{ github.event.inputs.chamber_version || '2.10.12' }}

      - name: Show Non-Namespaced Parameters
        run: |
          echo "Using non-namespaced parameters:"
          echo "Database URL: $DATABASE_URL"
          echo "API Key: $API_KEY"