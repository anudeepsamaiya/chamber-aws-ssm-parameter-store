name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  validate-action:
    name: Validate action.yml
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install and validate
        run: |
          make docker-dev-env
          docker compose exec -T test-runner npm install
          make validate

  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run linters
        run: |
          make docker-dev-env
          docker compose exec -T test-runner npm install
          make lint

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run unit tests
        run: |
          make docker-dev-env
          docker compose exec -T test-runner npm install
          make test-unit

  # Run integration tests with LocalStack
  integration-tests:
    name: Run integration tests with LocalStack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup environment and run integration tests
        run: |
          make docker-dev-env
          echo "Waiting for LocalStack to be ready..."
          sleep 10
          docker compose exec -T test-runner npm install
          make test-integration

  # Test the actual action in GitHub environment
  test-action:
    name: Test GitHub Action
    runs-on: ubuntu-latest
    needs: [validate-action, lint, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup LocalStack
        run: |
          make docker-dev-env
          echo "Waiting for LocalStack to be ready..."
          sleep 10

          # Set AWS environment variables
          export AWS_ACCESS_KEY_ID=test
          export AWS_SECRET_ACCESS_KEY=test
          export AWS_DEFAULT_REGION=us-east-1

      - name: Create test parameters
        run: |
          export TEST_PARAM_1="/test-action/param1"
          export TEST_PARAM_2="/test-action/param2"
          export TEST_VALUE_1="value1"
          export TEST_VALUE_2="value2"

          # Configure AWS CLI
          aws configure set aws_access_key_id test
          aws configure set aws_secret_access_key test
          aws configure set region us-east-1
          aws configure set output json

          # Set parameters in LocalStack
          aws --endpoint-url=http://localhost:4566 --region us-east-1 ssm put-parameter --name "$TEST_PARAM_1" --value "$TEST_VALUE_1" --type String --overwrite
          aws --endpoint-url=http://localhost:4566 --region us-east-1 ssm put-parameter --name "$TEST_PARAM_2" --value "$TEST_VALUE_2" --type String --overwrite

          # Verify parameters were created
          aws --endpoint-url=http://localhost:4566 --region us-east-1 ssm get-parameter --name "$TEST_PARAM_1" || echo "Failed to create parameter $TEST_PARAM_1"
          aws --endpoint-url=http://localhost:4566 --region us-east-1 ssm get-parameter --name "$TEST_PARAM_2" || echo "Failed to create parameter $TEST_PARAM_2"

      - name: Configure Chamber for LocalStack
        run: |
          echo "CHAMBER_AWS_SSM_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV

      - name: Test action functionality (basic)
        uses: ./
        with:
          parameters: |
            /test-action/param1
            /test-action/param2
          namespaced: 'true'
          aws-region: 'us-east-1'
          aws-access-key-id: 'test'
          aws-secret-access-key: 'test'

      - name: Clean up
        if: always()
        run: docker compose down